{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9a06fD0b909914bC3c32Ff867cbA54bA536a070A",
    "txHash": "0x17be27f185572c03c4b359f32af5405ca24a1f36e6fe1ab684996363f52bf9a2"
  },
  "proxies": [
    {
      "address": "0xD206Ca7c14125Ebeaf40eceF527980BaFf36600F",
      "txHash": "0x6839a5a1865303fbf62e765b34c0a47a0b4793864c1a61bbf537710f11df61b4",
      "kind": "transparent"
    },
    {
      "address": "0xFe768f240d7fd8b009186E834Bf1ac023ce2EBeE",
      "txHash": "0xd841a86979344fedf22706d9482a37089f53c737c811bb0cd72899b4980091c8",
      "kind": "transparent"
    },
    {
      "address": "0xB325d31a2aF99DA1434A3A6BE22489E871301D62",
      "txHash": "0x39e6fb00e7ec50ded7738c82bedb9d9c5cabcf348eb406a6ad07e0f5d3b9e3ec",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d114fb7238a28cfce921a1404d5fec688eec32fad514aebabbfcc49604904b15": {
      "address": "0xE5d6839120Cc31e978A6edc5990aA58841427110",
      "txHash": "0x8d5fce39abdd9cf2814789209e59aab3e58308f88bbed734645a4168b3dc57bc",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_isAdmin",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BNUGToken",
            "src": "contracts\\BNUGToken.sol:20"
          },
          {
            "label": "admins",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BNUGToken",
            "src": "contracts\\BNUGToken.sol:21"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "BNUGToken",
            "src": "contracts\\BNUGToken.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f81d8437f85b24b8611f7ac0de4f839bb1a38c507e7da694d71ac4725e205d17": {
      "address": "0xa4e3e622E1f265dfd1aF52A35E096fb6025b6D39",
      "txHash": "0xf3510c79c3d2f81ed780596f8a08b45edac08e5c2efaaed053a6e77f9a0a01d8",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:517"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)2605_storage",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:14"
          },
          {
            "label": "_itemsSold",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)2605_storage",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:15"
          },
          {
            "label": "bNUGToken",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(BNUGToken)4025",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:16"
          },
          {
            "label": "listingPrice",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:17"
          },
          {
            "label": "mintingReward",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:18"
          },
          {
            "label": "isMintingRewardPaused",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:19"
          },
          {
            "label": "userCount",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:20"
          },
          {
            "label": "infiniteReward",
            "offset": 0,
            "slot": "258",
            "type": "t_bool",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:21"
          },
          {
            "label": "referReward",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:22"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)4094_storage)",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:24"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_address,t_struct(User)4105_storage)",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:25"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(User)4105_storage)",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:26"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_array(t_struct(Reward)4112_storage)dyn_storage)",
            "contract": "NFTMarketplace",
            "src": "contracts\\NFTMarketplace.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Reward)4112_storage)dyn_storage": {
            "label": "struct NFTMarketplace.Reward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(BNUGToken)4025": {
            "label": "contract BNUGToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Reward)4112_storage)dyn_storage)": {
            "label": "mapping(address => struct NFTMarketplace.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)4105_storage)": {
            "label": "mapping(address => struct NFTMarketplace.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)4094_storage)": {
            "label": "mapping(uint256 => struct NFTMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(User)4105_storage)": {
            "label": "mapping(uint256 => struct NFTMarketplace.User)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2605_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)4094_storage": {
            "label": "struct NFTMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Reward)4112_storage": {
            "label": "struct NFTMarketplace.Reward",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)4105_storage": {
            "label": "struct NFTMarketplace.User",
            "members": [
              {
                "label": "userId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avatar",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "referedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "47a35d30ce978d935eb861982d47236c30b6802973e23e14280d1d832f79d611": {
      "address": "0x8546F84dd60be60899d62bE4B9aD1D5403391ef2",
      "txHash": "0x87bd2beea251ab01aac62f6da56d2c8006b4114cb6d9da4f8ca5041f410f498e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "general_fee",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "BNUGEvent",
            "src": "contracts\\BNUGEvent.sol:21"
          },
          {
            "label": "vip_fee",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "BNUGEvent",
            "src": "contracts\\BNUGEvent.sol:22"
          },
          {
            "label": "devs_fee",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "BNUGEvent",
            "src": "contracts\\BNUGEvent.sol:23"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "BNUGEvent",
            "src": "contracts\\BNUGEvent.sol:24"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "BNUGEvent",
            "src": "contracts\\BNUGEvent.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "BNUGEvent",
            "src": "contracts\\BNUGEvent.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
